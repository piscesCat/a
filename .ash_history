apk add git
apk update
ls
la
ls
mkdir test
ls
su -
ls
sudo su -
la
ls
apk add unzip
ls
wget https://github.com/piscesCat/piscesCat/raw/refs/heads/main/php_template.zip
ls
rm -r test
unzip *
la
ls
git config --global user.name "Piscescat"
git config --global user.email "khaiphan9x@hotmail.com"
ls
git init
git add *
ls
git commit -m "add zip file"
git branch -M main
echo "# web-phim" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-phim.git
git push -u origin main
echo "# web-phim" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-phim.git
git push -u origin main
mkdir php
mv * php
ls
cd php
ls
apk add php php-cli php-phar php-openssl php-json curl
curl -sS https://getcomposer.org/installer -o composer-setup.php
la
ls
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
su -
ls
cd php
ls
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
php -v
ls
composer -v
ls
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
su root
ls
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
php -v
whoami
ls
cd ../
ls
rm -rf *
ls
wget https://github.com/piscesCat/piscesCat/raw/refs/heads/main/xxx.zip
mkdir php
mv xxx.zip php
ls
cd php
unzip *
ls
rm xxx*
la
ls
echo "# web-phim" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-phim.git
git push -u origin main
ls
git add . && git commit -m "initial commit" && git push
rm -rf *
ls
wget https://github.com/piscesCat/web-phim/raw/refs/heads/main/xyz.zip
la
ls
mkdir php
mv xyz* php
lá
ls
cd *
unzip *
la
ls
echo "# web-truyen" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-truyen.git
git push -u origin main
git add *
ls
echo "# web-truyen" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-truyen.git
git push -u origin main
cd ..
rm -rf *
wget https://github.com/piscesCat/web-truyen/raw/refs/heads/main/xml.zip
unzip *
rm xml*
ls
rm xyz*
git add *
echo "# web-truyen" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-truyen.git
git push -u origin main
echo "# web-truyen" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-truyen.git
git push -u origin main
ls
cat .git
cat .git*
ls
echo "# web-phim" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-phim.git
git push -u origin main
ls
rm -rf *
wget https://github.com/piscesCat/piscesCat/raw/refs/heads/main/xx.zip
unzip *
rm xx*
ls
echo "# web-truyen" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-truyen.git
git push -u origin main
git remote add origin https://github.com/piscesCat/web-truyen.git
git branch -M main
git push -u origin main
git add *
git remote add origin https://github.com/piscesCat/web-truyen.git
git branch -M main
git push -u origin main
echo "# web-truyen" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-truyen.git
git push -u origin main
la
ls
rm RE*
ls
echo "# same-new-ai" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/same-new-ai.git
git push -u origin main
git add *
echo "# same-new-ai" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/same-new-ai.git
git push -u origin main
ls
ghp_9l9JxVWlQPyZHpE7tO3zNcsh9A0MFV
git remote add origin https://github.com/piscesCat/same-new-ai.git
git branch -M main
git push -u origin main
rm -rf *
wget https://github.com/piscesCat/piscesCat/raw/refs/heads/main/mmm.zip
unzip *
ls
rm mm*
ls
git add *
echo "# web-khai" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-khai.git
git push -u origin main
git rm -r --cached .
git add .
git commit -m "Clear Git cache"
ls
git remote remove origin
git remote add origin https://new-url.git
rm -rf .git
git init
ls
echo "# web-khai" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/web-khai.git
git push -u origin main
git add .
git push -u origin main
git init
toàn bộ file hiện tại
git commit -m "Initial commit"      # Commit tất cả
git branch -M main                  # Đổi sang nhánh chính (nếu cần)
git push -u origin main             # Đẩy lên GitHub
rm -rf *
wget https://github.com/piscesCat/web-khai/raw/refs/heads/main/truyen.zip
unzip *
ls
rm __*
rm -rf _*
ls
rm truyen*
ls
git add .
echo "# khai-pro" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/khai-pro.git
git push -u origin main
git remote remove origin
git remote add origin https://new-url.git
echo "# khai-pro" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/khai-pro.git
git push -u origin main
git remote add origin https://github.com/piscesCat/khai-pro.git
git branch -M main
git push -u origin main
git remote remove origin
ls
git remote add origin https://github.com/piscesCat/khai-pro.git
git branch -M main
git push -u origin main
git config --global credential.helper store
git remote remove origin
rm -rf *
ls
wget https://github.com/piscesCat/khai-pro/raw/refs/heads/main/truyen.zip
unzip *
rm truyen*
ls
echo "# not" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/not.git
git push -u origin main
rm -rf *
wget https://github.com/piscesCat/not/raw/refs/heads/main/truyen.zip
unzip *
rm truy*
ls
rm _*
ls
rm -rf _*
ls
echo "# x" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/x.git
git push -u origin main
git add .
git remote remove origin
echo "# x" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/x.git
git push -u origin main
git remote add origin https://github.com/piscesCat/x.git
git branch -M main
git push -u origin main
git reset --soft HEAD~1
git add .
git commit -m "Remove secret"
git remote add origin https://github.com/piscesCat/x.git
git branch -M main
git push -u origin main
git add .
git commit -m "Remove secret"
echo "# x" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/piscesCat/x.git
git push -u origin main
git reset --soft HEAD~1
rm .git-credentials
git add .
